% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/xsem.R
\name{mxsem}
\alias{mxsem}
\title{mxsem}
\usage{
mxsem(
  model,
  data,
  scale_loadings = TRUE,
  scale_latent_variances = FALSE,
  add_intercepts = TRUE,
  add_variances = TRUE,
  lbound_variances = TRUE
)
}
\arguments{
\item{model}{model syntax similar to lavaan's syntax}

\item{data}{raw data used to fit the model}

\item{scale_loadings}{should the first loading of each latent variable be used for scaling?}

\item{scale_latent_variances}{should the latent variances be used for scaling}

\item{add_intercepts}{should intercepts for manifest variables be added automatically?}

\item{add_variances}{should variances for manifest and latent variables be added automatically?}

\item{lbound_variances}{should the lower bound for variances be set to 0.000001?}
}
\value{
mxModel object that can be fitted with mxRun or mxTryHard
}
\description{
create an extended SEM with OpenMx using a lavaan like syntax.
}
\examples{
# THE FOLLOWING EXAMPLE IS ADAPTED FROM LAVAAN
model <- '
  # latent variable definitions
     ind60 =~ x1 + x2 + x3
     dem60 =~ y1 + a1*y2 + b*y3 + c1*y4
     dem65 =~ y5 + a2*y6 + b*y7 + c2*y8

  # regressions
    dem60 ~ ind60
    dem65 ~ ind60 + dem60

  # residual correlations
    y1 ~~ y5
    y2 ~~ y4 + y6
    y3 ~~ y7
    y4 ~~ y8
    y6 ~~ y8
'

fit <- mxsem(model = model,
            data  = OpenMx::Bollen) |>
  mxTryHard()
omxGetParameters(fit)


model_transformations <- '
  # latent variable definitions
     ind60 =~ x1 + x2 + x3
     dem60 =~ y1 + a1*y2 + b1*y3 + c1*y4
     dem65 =~ y5 + a2*y6 + b2*y7 + c2*y8

  # regressions
    dem60 ~ ind60
    dem65 ~ ind60 + dem60

  # residual correlations
    y1 ~~ y5
    y2 ~~ y4 + y6
    y3 ~~ y7
    y4 ~~ y8
    y6 ~~ y8

# create new parameters:
!delta_a
!delta_b

# use the model parameters and the new parameters for transformations:
a2 := a1 + delta_a
# let us also add an overly complicated equality constraint...
delta_b := 0
b2 := b1 + delta_b
'

fit <- mxsem(model = model_transformations,
            data  = OpenMx::Bollen) |>
  mxTryHard()
omxGetParameters(fit)
}
